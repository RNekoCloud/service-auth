// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: auth.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO cvz_users (
    id, email, password, role
) VALUES (
    $1, $2, $3, $4
)
`

type CreateUserParams struct {
	ID       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
	Role     int32  `json:"role"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.ID,
		arg.Email,
		arg.Password,
		arg.Role,
	)
	return err
}

const findUser = `-- name: FindUser :one
SELECT id, email, password, role FROM cvz_users 
WHERE email = $1 LIMIT 1
`

func (q *Queries) FindUser(ctx context.Context, email string) (CvzUser, error) {
	row := q.db.QueryRowContext(ctx, findUser, email)
	var i CvzUser
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.Role,
	)
	return i, err
}
